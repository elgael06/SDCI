{"ast":null,"code":"import _regeneratorRuntime from\"/home/gael/development/base-back-end/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/gael/development/base-back-end/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';export var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var username,password,token,_yield$axios$post,data,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:username=_args.length>0&&_args[0]!==undefined?_args[0]:'';password=_args.length>1&&_args[1]!==undefined?_args[1]:'';token=Buffer.from(\"\".concat(username,\":\").concat(password),'utf8').toString('base64');_context.next=5;return axios.post('https://base-back-end-api.herokuapp.com/api/v1/sesion/login',{email:username},{headers:{'Authorization':\"Basic \".concat(token)}});case 5:_yield$axios$post=_context.sent;data=_yield$axios$post.data;return _context.abrupt(\"return\",data);case 8:case\"end\":return _context.stop();}}},_callee);}));return function login(){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/gael/development/base-back-end/frontend/src/api/login.ts"],"names":["axios","login","username","password","token","Buffer","from","toString","post","email","headers","data"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,KAAK,0FAAG,sMAAOC,QAAP,+CAAkB,EAAlB,CAAsBC,QAAtB,+CAAiC,EAAjC,CACXC,KADW,CACHC,MAAM,CAACC,IAAP,WAAeJ,QAAf,aAA2BC,QAA3B,EAAuC,MAAvC,EAA+CI,QAA/C,CAAwD,QAAxD,CADG,uBAEMP,CAAAA,KAAK,CAACQ,IAAN,CAAW,6DAAX,CACnB,CAAEC,KAAK,CAAEP,QAAT,CADmB,CACE,CACrBQ,OAAO,CAAE,CACT,gCAA0BN,KAA1B,CADS,CADY,CADF,CAFN,wCAETO,IAFS,mBAETA,IAFS,iCAOVA,IAPU,wDAAH,kBAALV,CAAAA,KAAK,0CAAX","sourcesContent":["import axios from 'axios';\n\nexport const login = async (username = '', password = '') => {\n    const token = Buffer.from(`${username}:${password}`, 'utf8').toString('base64')\n    const { data } = await axios.post('https://base-back-end-api.herokuapp.com/api/v1/sesion/login',\n        { email: username }, {\n        headers: {\n        'Authorization': `Basic ${token}`\n    },});\n    return data;\n}"]},"metadata":{},"sourceType":"module"}