{"ast":null,"code":"import{IonItem,IonLabel,IonList,IonToggle}from\"@ionic/react\";import{useDispatch,useSelector}from\"react-redux\";import{selectGasto}from\"../../../redux/actions/formGasto\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tipo=function Tipo(){var _useSelector=useSelector(function(state){return state.formGasto;}),_useSelector$lista=_useSelector.lista,lista=_useSelector$lista===void 0?[]:_useSelector$lista,_useSelector$tipo=_useSelector.tipo,tipo=_useSelector$tipo===void 0?'':_useSelector$tipo;var dispatch=useDispatch();var selectItem=function selectItem(item){return dispatch(selectGasto(item));};var comprobar=function comprobar(val){return val==tipo;};return/*#__PURE__*/_jsx(IonList,{className:\"lista\",children:lista.map(function(item){var status=comprobar(item.id);return/*#__PURE__*/_jsxs(IonItem,{type:\"button\",onClick:function onClick(){return selectItem(item.id);},lines:\"none\",detail:false,color:status?'light':'',children:[/*#__PURE__*/_jsx(IonLabel,{children:item.text}),/*#__PURE__*/_jsx(IonToggle,{color:\"primary\",checked:status})]},item.id);})});};export default Tipo;","map":{"version":3,"sources":["/home/gael/development/base-back-end/frontend/src/pages/Gastos/components/Tipos.tsx"],"names":["IonItem","IonLabel","IonList","IonToggle","useDispatch","useSelector","selectGasto","Tipo","state","formGasto","lista","tipo","dispatch","selectItem","item","comprobar","val","map","status","id","text"],"mappings":"AAAA,OAASA,OAAT,CAAkBC,QAAlB,CAA4BC,OAA5B,CAAqCC,SAArC,KAAsD,cAAtD,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA4B,kCAA5B,C,wFAIA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,kBAC0DF,WAAW,CAAC,SAACG,KAAD,QAAgBA,CAAAA,KAAK,CAACC,SAAtB,EAAD,CADrE,iCACPC,KADO,CACPA,KADO,6BACC,EADD,mDACKC,IADL,CACKA,IADL,4BACY,EADZ,mBAEf,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAkBF,CAAAA,QAAQ,CAACN,WAAW,CAACQ,IAAD,CAAZ,CAA1B,EAAnB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,QAAiBA,CAAAA,GAAG,EAAIL,IAAxB,EAAlB,CAEA,mBAAQ,KAAC,OAAD,EAAS,SAAS,CAAC,OAAnB,UAEAD,KAAK,CAACO,GAAN,CAAU,SAAAH,IAAI,CAAI,CACd,GAAMI,CAAAA,MAAM,CAAGH,SAAS,CAACD,IAAI,CAACK,EAAN,CAAxB,CAEA,mBAAO,MAAC,OAAD,EAEH,IAAI,CAAC,QAFF,CAGH,OAAO,CAAE,yBAAMN,CAAAA,UAAU,CAACC,IAAI,CAACK,EAAN,CAAhB,EAHN,CAIH,KAAK,CAAC,MAJH,CAKH,MAAM,CAAE,KALL,CAMH,KAAK,CAAED,MAAM,CAAG,OAAH,CAAa,EANvB,wBAQH,KAAC,QAAD,WAAWJ,IAAI,CAACM,IAAhB,EARG,cASH,KAAC,SAAD,EAAW,KAAK,CAAC,SAAjB,CAA2B,OAAO,CAAEF,MAApC,EATG,GACEJ,IAAI,CAACK,EADP,CAAP,CAWH,CAdD,CAFA,EAAR,CAoBH,CA1BD,CA4BA,cAAeZ,CAAAA,IAAf","sourcesContent":["import { IonItem, IonLabel, IonList, IonToggle } from \"@ionic/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectGasto } from \"../../../redux/actions/formGasto\";\nimport { gastoLista } from \"../../../redux/reducers/gasto\";\n\n\nconst Tipo = () => { \n    const { lista = [], tipo = '' }: { lista: gastoLista[], tipo: string } = useSelector((state: any) => state.formGasto);\n    const dispatch = useDispatch();\n    const selectItem = (item: string) => dispatch(selectGasto(item));\n    const comprobar = (val: string) => val == tipo;\n \n    return (<IonList className='lista'>\n        {\n            lista.map(item => {\n                const status = comprobar(item.id);\n                \n                return <IonItem\n                    key={item.id}\n                    type='button'\n                    onClick={() => selectItem(item.id)}\n                    lines=\"none\"\n                    detail={false}\n                    color={status ? 'light' : ''}\n                >\n                    <IonLabel>{item.text}</IonLabel>\n                    <IonToggle color='primary' checked={status} />\n                </IonItem>\n            }\n            )\n        }\n    </IonList>);\n}\n\nexport default Tipo;"]},"metadata":{},"sourceType":"module"}