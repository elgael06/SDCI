{"ast":null,"code":"import { r as registerInstance, h, H as Host, a as getElement } from './index-1880c860.js';\nimport { i as isStr, g as getUrl, b as getName } from './utils-bc896e4b.js';\n\nconst validateContent = svgContent => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent; // setup this way to ensure it works on our buddy IE\n\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  } // must only have 1 root element\n\n\n  const svgElm = div.firstElementChild;\n\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim()); // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n\n  return '';\n};\n\nconst isValid = elm => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const val = elm.attributes[i].value;\n\n      if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst ioniconContent = new Map();\nconst requests = new Map();\n\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      // we don't already have a request\n      req = fetch(url).then(rsp => {\n        if (rsp.ok) {\n          return rsp.text().then(svgContent => {\n            if (svgContent && sanitize !== false) {\n              svgContent = validateContent(svgContent);\n            }\n\n            ioniconContent.set(url, svgContent || '');\n          });\n        }\n\n        ioniconContent.set(url, '');\n      }); // cache for the same requests\n\n      requests.set(url, req);\n    } else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n\n  return req;\n};\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{transform:scaleX(-1)}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\nconst Icon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n\n    this.sanitize = true;\n  }\n\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n\n  waitUntilVisible(el, rootMargin, cb) {\n    if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = this.io = new window.IntersectionObserver(data => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, {\n        rootMargin\n      });\n      io.observe(el);\n    } else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n\n  loadIcon() {\n    if (this.isVisible) {\n      const url = getUrl(this);\n\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        } else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => this.svgContent = ioniconContent.get(url));\n        }\n      }\n    }\n\n    if (!this.ariaLabel && this.ariaHidden !== 'true') {\n      const label = getName(this.name, this.icon, this.mode, this.ios, this.md); // user did not provide a label\n      // come up with the label based on the icon name\n\n      if (label) {\n        this.ariaLabel = label.replace(/\\-/g, ' ');\n      }\n    }\n  }\n\n  render() {\n    const mode = this.mode || 'md';\n    const flipRtl = this.flipRtl || this.ariaLabel && (this.ariaLabel.indexOf('arrow') > -1 || this.ariaLabel.indexOf('chevron') > -1) && this.flipRtl !== false;\n    return h(Host, {\n      role: \"img\",\n      class: Object.assign(Object.assign({\n        [mode]: true\n      }, createColorClasses(this.color)), {\n        [`icon-${this.size}`]: !!this.size,\n        'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl'\n      })\n    }, this.svgContent ? h(\"div\", {\n      class: \"icon-inner\",\n      innerHTML: this.svgContent\n    }) : h(\"div\", {\n      class: \"icon-inner\"\n    }));\n  }\n\n  static get assetsDirs() {\n    return [\"svg\"];\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"name\": [\"loadIcon\"],\n      \"src\": [\"loadIcon\"],\n      \"icon\": [\"loadIcon\"]\n    };\n  }\n\n};\n\nconst getIonMode = () => typeof document !== 'undefined' && document.documentElement.getAttribute('mode') || 'md';\n\nconst createColorClasses = color => {\n  return color ? {\n    'ion-color': true,\n    [`ion-color-${color}`]: true\n  } : null;\n};\n\nIcon.style = iconCss;\nexport { Icon as ion_icon };","map":{"version":3,"sources":["/home/gael/development/front-lamar/node_modules/ionicons/dist/esm/ion-icon.entry.js"],"names":["r","registerInstance","h","H","Host","a","getElement","i","isStr","g","getUrl","b","getName","validateContent","svgContent","div","document","createElement","innerHTML","childNodes","length","nodeName","toLowerCase","removeChild","svgElm","firstElementChild","svgClass","getAttribute","setAttribute","trim","isValid","elm","nodeType","attributes","val","value","indexOf","ioniconContent","Map","requests","getSvgContent","url","sanitize","req","get","fetch","then","rsp","ok","text","set","Promise","resolve","iconCss","Icon","constructor","hostRef","isVisible","mode","getIonMode","lazy","connectedCallback","waitUntilVisible","el","loadIcon","disconnectedCallback","io","disconnect","undefined","rootMargin","cb","window","IntersectionObserver","data","isIntersecting","observe","has","ariaLabel","ariaHidden","label","name","icon","ios","md","replace","render","flipRtl","role","class","Object","assign","createColorClasses","color","size","ownerDocument","dir","assetsDirs","watchers","documentElement","style","ion_icon"],"mappings":"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","sourcesContent":["import { r as registerInstance, h, H as Host, a as getElement } from './index-1880c860.js';\nimport { i as isStr, g as getUrl, b as getName } from './utils-bc896e4b.js';\n\nconst validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nconst isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const val = elm.attributes[i].value;\n      if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst ioniconContent = new Map();\nconst requests = new Map();\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      // we don't already have a request\n      req = fetch(url).then((rsp) => {\n        if (rsp.ok) {\n          return rsp.text().then((svgContent) => {\n            if (svgContent && sanitize !== false) {\n              svgContent = validateContent(svgContent);\n            }\n            ioniconContent.set(url, svgContent || '');\n          });\n        }\n        ioniconContent.set(url, '');\n      });\n      // cache for the same requests\n      requests.set(url, req);\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{transform:scaleX(-1)}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\n\nconst Icon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n    this.sanitize = true;\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if ( this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if ( this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n      }\n    }\n    if (!this.ariaLabel && this.ariaHidden !== 'true') {\n      const label = getName(this.name, this.icon, this.mode, this.ios, this.md);\n      // user did not provide a label\n      // come up with the label based on the icon name\n      if (label) {\n        this.ariaLabel = label.replace(/\\-/g, ' ');\n      }\n    }\n  }\n  render() {\n    const mode = this.mode || 'md';\n    const flipRtl = this.flipRtl ||\n      (this.ariaLabel &&\n        (this.ariaLabel.indexOf('arrow') > -1 || this.ariaLabel.indexOf('chevron') > -1) &&\n        this.flipRtl !== false);\n    return (h(Host, { role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl' }) },  this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"name\": [\"loadIcon\"],\n    \"src\": [\"loadIcon\"],\n    \"icon\": [\"loadIcon\"]\n  }; }\n};\nconst getIonMode = () => ( typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\nIcon.style = iconCss;\n\nexport { Icon as ion_icon };\n"]},"metadata":{},"sourceType":"module"}