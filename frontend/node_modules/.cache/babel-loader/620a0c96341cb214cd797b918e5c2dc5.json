{"ast":null,"code":"var _jsxFileName = \"/home/gael/development/front-lamar/src/pages/Gastos/NuevoGasto.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonLabel, IonSegment, IonSegmentButton, IonTitle, IonToolbar } from \"@ionic/react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addLista } from \"../../redux/actions/formGasto\";\nimport Descripcion from \"./components/Descripcion\";\nimport Tipo from \"./components/Tipos\";\nimport lista from './assets/listaGastos.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst opciones = ['Tipo', 'Descripcion', 'Comprobante', 'Resumen'];\n\nconst NuevoGasto = () => {\n  _s();\n\n  const [selected, onSelected] = useState('Tipo');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(addLista(lista));\n  }, []);\n\n  const onchange = event => {\n    console.log(event.detail);\n    onSelected(event.detail.value);\n  };\n\n  const taps = (name, index) => /*#__PURE__*/_jsxDEV(IonSegmentButton, {\n    value: name,\n    title: name,\n    children: /*#__PURE__*/_jsxDEV(IonLabel, {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 48\n  }, this);\n\n  const PasoSeleccion = () => {\n    if (selected == 'Tipo') return /*#__PURE__*/_jsxDEV(Tipo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this);else if (selected == 'Descripcion') return /*#__PURE__*/_jsxDEV(Descripcion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 52\n    }, this);else return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IonToolbar, {\n      children: /*#__PURE__*/_jsxDEV(IonTitle, {\n        children: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IonSegment, {\n      onIonChange: onchange,\n      value: `${selected}`,\n      color: \"primary\",\n      children: opciones.map((value, index) => taps(value, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PasoSeleccion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NuevoGasto, \"ztawKnh9+gQGaEqQ1bmLU9qwRyg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NuevoGasto;\nexport default NuevoGasto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoGasto\");","map":{"version":3,"sources":["/home/gael/development/front-lamar/src/pages/Gastos/NuevoGasto.tsx"],"names":["IonLabel","IonSegment","IonSegmentButton","IonTitle","IonToolbar","useEffect","useState","useDispatch","addLista","Descripcion","Tipo","lista","opciones","NuevoGasto","selected","onSelected","dispatch","onchange","event","console","log","detail","value","taps","name","index","PasoSeleccion","map"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,UAAlB,EAA8BC,gBAA9B,EAAgDC,QAAhD,EAA0DC,UAA1D,QAA4E,cAA5E;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,QAAiB,GAAG,CAAC,MAAD,EAAQ,aAAR,EAAsB,aAAtB,EAAoC,SAApC,CAA1B;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,MAAD,CAAvC;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACR,QAAQ,CAACG,KAAD,CAAT,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMM,QAAQ,GAAIC,KAAD,IAAe;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACAN,IAAAA,UAAU,CAACG,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACH,GAHD;;AAKA,QAAMC,IAAI,GAAG,CAACC,IAAD,EAAaC,KAAb,kBAA8B,QAAC,gBAAD;AAA6B,IAAA,KAAK,EAAED,IAApC;AAA0C,IAAA,KAAK,EAAEA,IAAjD;AAAA,2BACnC,QAAC,QAAD;AAAA,gBAAWC,KAAK,GAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADmC,KAAuBD,IAAvB;AAAA;AAAA;AAAA;AAAA,UAA3C;;AAIA,QAAME,aAAa,GAAG,MAAM;AACxB,QAAIZ,QAAQ,IAAI,MAAhB,EAAwB,oBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAP,CAAxB,KACK,IAAIA,QAAQ,IAAI,aAAhB,EAA+B,oBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAP,CAA/B,KACC,OAAO,IAAP;AACT,GAJD;;AAMA,sBAAO;AAAA,4BACH,QAAC,UAAD;AAAA,6BACI,QAAC,QAAD;AAAA,kBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEG,QAAzB;AAAmC,MAAA,KAAK,EAAG,GAAEH,QAAS,EAAtD;AAAyD,MAAA,KAAK,EAAC,SAA/D;AAAA,gBACCF,QAAQ,CAACe,GAAT,CAAa,CAACL,KAAD,EAAOG,KAAP,KAAiBF,IAAI,CAACD,KAAD,EAAOG,KAAP,CAAlC;AADD;AAAA;AAAA;AAAA;AAAA,YALG,eAQH;AAAA;AAAA;AAAA;AAAA,YARG,eASH,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YATG,eAUH;AAAA;AAAA;AAAA;AAAA,YAVG;AAAA,kBAAP;AAYH,CAnCD;;GAAMZ,U;UAEeN,W;;;KAFfM,U;AAqCN,eAAeA,UAAf","sourcesContent":["import { IonLabel,IonSegment, IonSegmentButton, IonTitle, IonToolbar } from \"@ionic/react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addLista } from \"../../redux/actions/formGasto\";\nimport Descripcion from \"./components/Descripcion\";\nimport Tipo from \"./components/Tipos\";\nimport lista from './assets/listaGastos.json';\n\nconst opciones:string[] = ['Tipo','Descripcion','Comprobante','Resumen'];\n\nconst NuevoGasto: React.FC = () => { \n    const [selected, onSelected] = useState('Tipo');\n    const dispatch = useDispatch();\n\n    useEffect(() => { \n        dispatch(addLista(lista));\n    },[]);\n\n    const onchange = (event:any) => { \n        console.log(event.detail);      \n        onSelected(event.detail.value);\n    }\n\n    const taps = (name:string,index:number) => <IonSegmentButton key={name} value={name} title={name}>\n            <IonLabel>{index+1}</IonLabel>\n    </IonSegmentButton>;\n    \n    const PasoSeleccion = () => { \n        if (selected == 'Tipo') return <Tipo />;\n        else if (selected == 'Descripcion') return <Descripcion />;\n        else  return null;\n    }\n\n    return <>\n        <IonToolbar>\n            <IonTitle>{selected}</IonTitle>\n            </IonToolbar>\n        \n        <IonSegment onIonChange={onchange} value={`${selected}`} color='primary' >\n        {opciones.map((value,index) => taps(value,index))}\n        </IonSegment>\n        <br />\n        <PasoSeleccion />\n        <br />\n    </>\n}\n\nexport default NuevoGasto;"]},"metadata":{},"sourceType":"module"}