{"version":3,"sources":["pages/Gastos/assets/img/foto.png","redux/actions/formGasto.ts","pages/Gastos/components/Descripcion.tsx","pages/Gastos/components/Tipos.tsx","pages/Gastos/components/Comprobante.tsx","pages/Gastos/components/Resumen.tsx","pages/Gastos/NuevoGasto.tsx"],"names":["selectGasto","value","dispatch","a","type","selectDesc","selectCosto","selectImage","Descripcion","useSelector","state","formGasto","descripcion","costo","useDispatch","className","icon","wallet","slot","position","min","onIonChange","e","val","detail","reader","rows","maxlength","Tipo","lista","tipo","map","item","status","id","onClick","selectItem","lines","color","text","checked","Comprobante","imgComp","takePicture","Camera","getPhoto","quality","allowEditing","resultType","CameraResultType","DataUrl","height","width","_image","imageUrl","dataUrl","style","display","justifyContent","src","imageFotoBase","textAlign","Resumen","history","useHistory","useState","showToast","setShow","res","find","index","array","textGasto","expand","isOpen","onDidDismiss","setTimeout","goBack","message","duration","opciones","NuevoGasto","selected","onSelected","useEffect","PasoSeleccion","Title","name","event","title","taps"],"mappings":"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","file":"control/static/js/10.d22bf556.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"control/static/media/foto.8ba1c3b1.png\";","import { gastoLista } from \"../reducers/gasto\";\n\n\nexport const selectGasto = (value:string) => { \n    return async (dispatch:any) => { \n        dispatch({ type: 'addTipo',value });\n    }\n}\nexport const selectDesc = (value:string) => { \n    return async (dispatch:any) => { \n        dispatch({ type: 'addDesc',value });\n    }\n}\nexport const selectCosto = (value:string) => { \n    return async (dispatch:any) => { \n        dispatch({ type: 'addCosto',value });\n    }\n}\nexport const selectImage = (value:string) => { \n    return async (dispatch:any) => { \n        dispatch({ type: 'addImage',value});\n    }\n}\nexport const addLista = (value:gastoLista[]) => { \n    return async (dispatch:any) => { \n        dispatch({ type: 'addLista',value});\n    }\n}","import { IonCard, IonCardTitle, IonIcon, IonInput, IonItem, IonLabel, IonList, IonTextarea } from \"@ionic/react\";\nimport { reader, wallet } from 'ionicons/icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCosto, selectDesc } from \"../../../redux/actions/formGasto\";\n\nconst Descripcion = () => { \n    const { descripcion='',costo=0 } = useSelector((state: any) => state.formGasto);\n    const dispatch = useDispatch();\n\n    const changeDesc = (val: string) => { \n        dispatch(selectDesc(val));\n    }\n    const changeCost = (val: string) => { \n        dispatch(selectCosto(val));\n    }\n    return (\n        <IonList className='lista'>\n            <br />\n            <IonCard>\n            <IonItem>\n                <IonIcon icon={wallet} slot='start' />\n                <IonLabel position='fixed'>gasto $ </IonLabel>\n                <IonInput type='number' min='0'  value={costo} onIonChange={e=>changeCost(e.detail.value!)} />\n            </IonItem>\n            </IonCard>\n            <br/>\n            <IonCard>\n                <IonItem >\n                    <IonIcon slot='start' icon={reader}/>\n                <IonCardTitle > Descripcion</IonCardTitle>\n                </IonItem>\n                <IonTextarea rows={6} maxlength={150} value={descripcion} onIonChange={e=>changeDesc(e.detail.value!)} />\n            </IonCard>\n        </IonList>\n    );\n}\n\nexport default Descripcion;","import { IonItem, IonLabel, IonList, IonToggle } from \"@ionic/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectGasto } from \"../../../redux/actions/formGasto\";\nimport { gastoLista } from \"../../../redux/reducers/gasto\";\n\n\nconst Tipo = () => { \n    const { lista = [], tipo = '' }: { lista: gastoLista[], tipo: string } = useSelector((state: any) => state.formGasto);\n    const dispatch = useDispatch();\n    const selectItem = (item: string) => dispatch(selectGasto(item));\n    const comprobar = (val: string) => val === tipo;\n \n    return (<IonList className='lista'>\n        {\n            lista.map(item => {\n                const status = comprobar(item.id);\n                \n                return <IonItem\n                    key={item.id}\n                    type='button'\n                    onClick={() => selectItem(item.id)}\n                    lines=\"none\"\n                    detail={false}\n                    color={status ? 'light' : ''}\n                >\n                    <IonLabel>{item.text}</IonLabel>\n                    <IonToggle color='primary' checked={status} />\n                </IonItem>\n            }\n            )\n        }\n    </IonList>);\n}\n\nexport default Tipo;","import { Camera, CameraResultType } from \"@capacitor/core\";\nimport { IonBadge, IonCard, IonCardSubtitle, IonImg } from \"@ionic/react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectImage } from '../../../redux/actions/formGasto';\nimport imageFotoBase from '../assets/img/foto.png';\n\n\nconst Comprobante: React.FC = () => { \n    const { imgComp='' } = useSelector((state: any) => state.formGasto);\n    const dispatch = useDispatch();\n\n    const  takePicture  = async ():Promise<any> =>  {\n        const _image = await Camera.getPhoto({\n            quality: 10,\n            allowEditing: false,\n            resultType: CameraResultType.DataUrl,\n            height: 160,\n            width: 400,\n            \n        });\n        const imageUrl = _image.dataUrl || '';        \n        dispatch(selectImage(imageUrl));\n    }\n\n    return <div style={{display:'flex',justifyContent:'center'}} className='lista'>\n        <IonCard onClick={takePicture} style={{width:260}}>\n            <IonImg src={imgComp || imageFotoBase} /> \n            \n            <IonCardSubtitle style={{textAlign:'center'}}>\n                SELECCIONAR IMAGEN \n            </IonCardSubtitle>\n            <br />\n            <IonBadge style={{width:'100%'}} color=\"dark\">nota o ticket de compra</IonBadge>\n        \n        </IonCard>\n    </div> \n}\n\nexport default Comprobante;","import { IonButton, IonCard, IonImg, IonItem, IonLabel, IonList, IonText, IonToast } from \"@ionic/react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { stateGasto } from \"../../../redux/reducers/gasto\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { selectGasto,selectDesc,selectCosto,selectImage } from '../../../redux/actions/formGasto';\n\nimport imageFotoBase from '../assets/img/foto.png';\n\n\nconst Resumen: React.FC = () => { \n    const { lista = [], tipo = '',descripcion='',costo=0,imgComp }: stateGasto = useSelector((state: any) => state.formGasto);\n    const dispatch = useDispatch();\n  const history = useHistory();\n    const [showToast,setShow] = useState(false);\n\n    const textGasto = () => { \n        const res = lista.find((value, index, array) => value.id === tipo);\n        return res ? res!.text : '';\n    }\n\n    const handleSave = () => { \n        setShow(true);\n    }\n    const onDidDismiss = () => { \n        dispatch(selectGasto(''));\n        dispatch(selectDesc(''));\n        dispatch(selectCosto('0'));\n        dispatch(selectImage(''));\n\n        setShow(false);\n        setTimeout(() => history.goBack(),1000);\n    }\n    return <>\n        <IonList className='lista'>\n        \n        <IonItem>\n            <IonLabel className=\"ion-text-wrap\">\n                <IonText>Tipo Gasto:</IonText>\n                <IonText color=\"primary\">\n                    <p>{ textGasto() }</p>\n                </IonText>\n            </IonLabel>\n        </IonItem>\n\n        <IonItem >\n            <IonLabel className=\"ion-text-wrap\">\n                <IonText>Descripcion Gasto:</IonText>\n                <IonText color=\"primary\">\n                    <p>{ descripcion}</p>\n                </IonText>\n            </IonLabel>\n        </IonItem>\n\n        <IonItem>\n            <IonLabel className=\"ion-text-wrap\">\n                <IonText>Costo de gasto:</IonText>\n                <IonText color=\"primary\">\n                    <p>$ { costo}</p>\n                </IonText>\n            </IonLabel>\n        </IonItem>\n\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <IonCard style={{width:300}}>\n                <IonImg src={imgComp || imageFotoBase} />\n            </IonCard>\n        </div>\n        \n        </IonList>\n        <br />\n        <IonButton expand='block' color='success' onClick={handleSave} > GUARDAR</IonButton>\n        <IonToast\n            isOpen={showToast}\n            onDidDismiss={onDidDismiss}\n            position='bottom'\n            message='Se ha guardado el gasto'\n            duration={1000}\n        />\n        </>\n}\n\n\nexport default Resumen;","import { IonButton, IonLabel,IonSegment, IonSegmentButton } from \"@ionic/react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addLista } from \"../../redux/actions/formGasto\";\nimport Descripcion from \"./components/Descripcion\";\nimport Tipo from \"./components/Tipos\";\nimport lista from './assets/listaGastos.json';\nimport Title from \"../../components/Title\";\nimport Comprobante from \"./components/Comprobante\";\nimport Resumen from \"./components/Resumen\";\n\n\nconst opciones:string[] = ['Tipo','Descripcion','Comprobante','Resumen'];\n\nconst NuevoGasto: React.FC = () => { \n    const [selected, onSelected] = useState('Tipo');\n    const dispatch = useDispatch();\n\n    const _init= ()=>{\n        dispatch(addLista(lista));\n    }\n    // eslint-disable-next-line\n    useEffect(_init,[]);\n\n    const onchange = (event:any) => { \n        onSelected(event.detail.value);\n    }\n\n    const onNext = () => { \n        switch (selected) {\n            case opciones[0]:\n                onSelected(opciones[1]);\n                break;\n            case opciones[1]:\n                onSelected(opciones[2]);\n                break;\n            case opciones[2]:\n                onSelected(opciones[3]);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const taps = (name:string,index:number) => <IonSegmentButton key={name} value={name} title={name}>\n            <IonLabel>{index+1}</IonLabel>\n    </IonSegmentButton>;\n    \n    const PasoSeleccion = () => { \n        if (selected === 'Tipo') return <Tipo />;\n        else if (selected === 'Descripcion') return <Descripcion />;\n        else if (selected === 'Comprobante') return <Comprobante />;\n        else if (selected === 'Resumen') return <Resumen />;\n        else  return null;\n    }\n\n    return <>\n        <Title  name={selected}/>\n        \n        <IonSegment onIonChange={onchange} value={`${selected}`} color='primary' >\n        {opciones.map((value,index) => taps(value,index))}\n        </IonSegment>\n        <br />\n        <PasoSeleccion />\n        <br />\n        {selected !== 'Resumen' && <IonButton expand='full' onClick={onNext} >Siguiente</IonButton>}\n    </>\n}\n\nexport default NuevoGasto;"],"sourceRoot":""}